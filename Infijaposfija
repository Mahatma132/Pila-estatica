#include <iostream>
#define TAM 50
using namespace std;

class Pila{
private:
    char datos[TAM];
    int ult;
    bool inserta(char , int);
    bool elimina(int);
    int primero()const;
    int ultimo()const;
public:
    Pila():ult(-1){}
    bool vacia()const;
    bool llena()const;
    bool push(char);
    bool pop();
    char top()const;
};

char Pila::top()const{
    return datos[ult];
}

bool Pila::pop(){
    if(vacia()){
        return false;
    }
    else{
        elimina(ultimo());
    }
    return true;
}

bool Pila::push(char elem){
    if(llena()){
        return false;
    }
    if(vacia()){
        inserta(elem,0);
    }
    else{
        inserta(elem,ultimo()+1);
    }
    return true;
}

bool Pila::vacia()const{
    return ult==-1;
}
bool Pila::llena()const{
    return ult==TAM-1;
}

bool Pila::inserta(char elem, int pos){
    if(llena() || pos<0 || pos>ult+1){
        std::cout<<"\n No se pudo insertar";
        return false;
    }
    int i=ult+1;
    while(i>pos){
        datos[i]=datos[i-1];
        i--;
    }
    datos[pos]=elem;
    ult++;
    return true;
}

bool Pila::elimina(int pos){
    if(vacia() || pos<0 || pos>ult){
        std::cout<<"\n No se pudo eliminar";
        return false;
    }
    int i=pos;
    while(i<ult){
        datos[i]=datos[i+1];
        i++;
    }
    ult--;
    return true;
}


int Pila::primero()const{
    if(vacia()){
       return -1;
    }
    return 0;
}

int Pila::ultimo()const{
    if(vacia()){
       return -1;
    }
    return ult;
}

int infijaposfija(char menu)
{
    switch(menu)
    {
        case '/': return 2;
        case '*': return 2;
        case '+': return 1;
        case '-': return 1;
        default:  return 0;
    }
}

int main()
{
string infija, posfija;
Pila x;
int aux;

    cout<<"Introduce la operacion infija:"<<endl;
    cin.ignore();
    cin>>infija;
    for(int i=0; i<infija.size(); i++)
    {
        switch(infija[i])
        {
            case '(':
                x.push('(');
                break;
            case ')':
                while(x.top()!='(')
                {
                    posfija += x.top();
                    x.pop();
                }
                x.pop();
                break;
            case '+':
            case '-':
            case '*':
            case '/':
            if(infija[i]!=x.top()){
                while(infijaposfija(infija[i])<=infijaposfija(x.top()))
                {
                    posfija += x.top();
                    x.pop();
                }
                x.push(infija[i]);
                break;
            default:
                posfija += infija[i];
                    }
        }
    }
     while (!x.vacia())
        {
            posfija += x.top();
            x.pop();
        }
    cout<<"Posfija:"<<posfija<<endl;
return 0;
}
